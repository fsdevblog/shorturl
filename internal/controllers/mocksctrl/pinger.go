// Code generated by MockGen. DO NOT EDIT.
// Source: ping_controller.go

// Package mocksctrl is a generated GoMock package.
package mocksctrl

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConnectionChecker is a mock of ConnectionChecker interface.
type MockConnectionChecker struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionCheckerMockRecorder
}

// MockConnectionCheckerMockRecorder is the mock recorder for MockConnectionChecker.
type MockConnectionCheckerMockRecorder struct {
	mock *MockConnectionChecker
}

// NewMockConnectionChecker creates a new mock instance.
func NewMockConnectionChecker(ctrl *gomock.Controller) *MockConnectionChecker {
	mock := &MockConnectionChecker{ctrl: ctrl}
	mock.recorder = &MockConnectionCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectionChecker) EXPECT() *MockConnectionCheckerMockRecorder {
	return m.recorder
}

// CheckConnection mocks base method.
func (m *MockConnectionChecker) CheckConnection(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckConnection", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckConnection indicates an expected call of CheckConnection.
func (mr *MockConnectionCheckerMockRecorder) CheckConnection(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckConnection", reflect.TypeOf((*MockConnectionChecker)(nil).CheckConnection), ctx)
}
