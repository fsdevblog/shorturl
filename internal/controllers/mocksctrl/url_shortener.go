// Code generated by MockGen. DO NOT EDIT.
// Source: short_urls_controller.go

// Package mocksctrl is a generated GoMock package.
package mocksctrl

import (
	context "context"
	reflect "reflect"

	models "github.com/fsdevblog/shorturl/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockURLShortener is a mock of URLShortener interface.
type MockURLShortener struct {
	ctrl     *gomock.Controller
	recorder *MockURLShortenerMockRecorder
}

// MockURLShortenerMockRecorder is the mock recorder for MockURLShortener.
type MockURLShortenerMockRecorder struct {
	mock *MockURLShortener
}

// NewMockURLShortener creates a new mock instance.
func NewMockURLShortener(ctrl *gomock.Controller) *MockURLShortener {
	mock := &MockURLShortener{ctrl: ctrl}
	mock.recorder = &MockURLShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLShortener) EXPECT() *MockURLShortenerMockRecorder {
	return m.recorder
}

// BatchCreate mocks base method.
func (m *MockURLShortener) BatchCreate(ctx context.Context, rawURLs []string) ([]models.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchCreate", ctx, rawURLs)
	ret0, _ := ret[0].([]models.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchCreate indicates an expected call of BatchCreate.
func (mr *MockURLShortenerMockRecorder) BatchCreate(ctx, rawURLs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchCreate", reflect.TypeOf((*MockURLShortener)(nil).BatchCreate), ctx, rawURLs)
}

// Create mocks base method.
func (m *MockURLShortener) Create(ctx context.Context, rawURL string) (*models.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, rawURL)
	ret0, _ := ret[0].(*models.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockURLShortenerMockRecorder) Create(ctx, rawURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockURLShortener)(nil).Create), ctx, rawURL)
}

// GetByShortIdentifier mocks base method.
func (m *MockURLShortener) GetByShortIdentifier(ctx context.Context, shortID string) (*models.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByShortIdentifier", ctx, shortID)
	ret0, _ := ret[0].(*models.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByShortIdentifier indicates an expected call of GetByShortIdentifier.
func (mr *MockURLShortenerMockRecorder) GetByShortIdentifier(ctx, shortID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByShortIdentifier", reflect.TypeOf((*MockURLShortener)(nil).GetByShortIdentifier), ctx, shortID)
}
